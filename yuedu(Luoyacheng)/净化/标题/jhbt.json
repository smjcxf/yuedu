[
  {
    "excludeScope": "",
    "group": "标题",
    "id": 1730483750367,
    "isEnabled": true,
    "isRegex": true,
    "name": "去除正文中多余的标题",
    "order": -120,
    "pattern": "^第.{1,6}章.{0,29}（(?:.{0,19}(?:月票|盟主|[订更补章]).{0,19}|\\d{2,}|\\d+k)）|第(.{1,6}).章 *第?\\1.章?.{0,19}",
    "replacement": "",
    "scope": "",
    "scopeContent": true,
    "scopeTitle": false,
    "timeoutMillisecond": 3000
  },
  {
    "excludeScope": "",
    "group": "标题",
    "id": 1730471033402,
    "isEnabled": true,
    "isRegex": true,
    "name": "🌈优化目录¹",
    "order": -110,
    "pattern": "[\\s\\S]*(?:[Ａ-Ｚａ-ｚ０-９]|[(（【,?!]|番外|章\\S|[章话集节回][\\u2003\\u3000]|[章话集节回]\\s{2,}|章\\s[章第：、]|篇第|[话集节回卷][：:、]|[一二三四五六七八九十]、[一二三四五六七八九十])[\\s\\S]*|^[^一-ꀀ]+第|^[^一-ꀀ]*[\\d零一二三四五六七八九十][\\s\\S]*|^第[\\d零一二三四五六七八九十百]+花 |^第[一二三四五六七八九]把[零一二三四五六七八九十]{2,3}章",
    "replacement": "@js:\n//规则版本号：0.0.1\n\n//奇葩类标题放过补充第章\nxx=!/^o[rt][2?]$/i.test(result);\nbj1=0;\n\n//处理半角\nif (/[Ａ-Ｚａ-ｚ０-９]/.test(result)&&xx) {\nresult = result.replace(/[Ａ-Ｚａ-ｚ０-９]/g, function (ch) {\nreturn String.fromCharCode(ch.charCodeAt()-65248);})\n}\n\nif (/[(（【,?!]/.test(result)&&xx) {\n// 含括号广告丢弃\nlet t = \"(?:(?:加更.{0,3})?[\\\\d一二三四五六七八九十百千万]{2,}字(?:更新.{0,4})?|\\\\d\\\\.?\\\\d?[Kk].{0,2}|[Kk]章?|.{0,5}[\\\\d一二两三四五六七八九十补加]更\\\\d*|[\\\\d一二两三四五六七八九十补加]更(?:.{0,5}求.{0,9}|送上.{0,9}|.{0,3}补)?|为.{2,15}加更(?:大章|[\\\\d/]+)?|.{0,19}月[初末底]?票.{0,9}|[为给]盟主.{1,19}|感谢.*(?:黄金盟|盟主|打赏).*|向.*书友.*致歉.*|[二三四]合一.{0,3}|卡章补偿|.{0,5}求(?:订阅|首订|推荐|追读|个?票)(?:.{0,9}票)?|粉丝称号评论区参加|新一轮粉丝称号|感谢订阅支持|日万成功|补前天|补一章|[更])?[~！\\\\\\\\]*(?:or2)?\";\nlet zz = new RegExp(`[(（]${t}[）)]|【${t}】`,'g');\nresult = result.replace(zz, \"\");\n//英文符号修正\nresult = result.replace(/\\?$/, '？').replace(/\\!$/, '！').replace(/,(?=[一-ꀀ])/, '，');\n}\n\n// 去除开头的垃圾或0\nif (/^[^一-ꀀA-z（(【〖『「“‘]/.test(result)&&xx) {\nresult = result.replace(/^[^一-ꀀ（(【〖『「“‘\\d]*(?:0+(?=[1-9]))?/, \"\");\n}\n\n// 处理带括号的序号\nif (/^[（(【]/.test(result)&&xx) {\nresult = result.replace(/^[（(【](第?[\\d零一二三四五六七八九十百至]+章?|序章?)[】)）]/, \"$1 \");\n}\n\nif (/^\\d/.test(result)&&xx) {\n    // 纯数字序号，补充第章。特殊处理单“2014”“520小剧场”的情况\n    result = result.replace(/^(20[01237]\\d|\\d+小剧场)$/,'🛴$1').replace(/^(\\d+(?:[\\-～]+\\d+)?)(?:章\\s*)?(?=$|[^\\dA-z岁月号\\.]|\\. ?[一-ꀀ])/, \"第$1章 \").replace('🛴','');\n\n//一种特殊情况的特殊处理“13.<套路>”\nif (/\\</.test(result) ) {\nresult = result.replace(/^(\\d+)\\.\\<([一-ꀀ]+)\\>/,'第$1章 $2');\n}\n\n} \nelse if (/^[零一二三四五六七八九十]/.test(result)&&xx) {\n    // 汉字序号补充第章\n    result = result.replace(/^([零一二三四五六七八九十百千]+(?=[^一-ꀀ]|$|章))(?:章\\s*)?/, \"第$1章 \");\n}\nelse {bj1=1}\n\n//处理话集节回卷的情况\nif (/[话集节回卷](?![一-ꀀ])/.test(result)&&xx) {\nresult = result.replace(/^(第[^话集节回章卷\\s]+[话集节回卷])(?:[：:、]+|\\s{2,})/, \"$1 \");\n}\n\n// 处理章后面的情况，不包含“章 章”的情况\nif (/章/.test(result)&&xx) {\nresult = result.replace(/^((?:第.卷[一-ꀀ\\s]+)?第[^章篇卷部\\s]+章|[终序]章)(?![—-][第\\d])(?:[章])?[，。、：；】·\\.\\:\\s\\u2002\\u2003\\u3000]*(?:[第章]：)?/, \"$1 \").replace('—第','-第');\n}\n\n//处理带篇的异常\nif (/篇第/.test(result)&&xx) {\nresult = result.replace(/^([一-ꀀ]+篇)(第[^章\\s]+章)/, \"$1 $2\");\n}\n\n//美化处理\nif (/番外/.test(result)&&xx) {\nresult = result.replace(/((?:章 |^)番外篇)：?(?=[一-ꀀ])/, '$1·').replace(/^番外、/,'番外·');\n}\n\n//修复错字\nelse if (/^第[^\\s话花章]+花 /.test(result)&&xx&&bj1) {\nresult = result.replace(/花/, '话');}\nelse if (/^第[一二三四五六七八九]把[零一二三四五六七八九]/.test(result)&&xx&&bj1) {\nresult = result.replace(/把/, '百');}\n\n//补全省略序号信息\nif (/、[一二三四五六七八九十]/.test(result)&&xx) {\nresult = result.replace(/^(第)(.?十)([一二三四五六七八九]+)、([一二三四五六七八九])(?=[集章话节])/, '$1$2$3、$2$4');\n}\n\nresult || \"💔净化规则出错\"",
    "scope": "",
    "scopeContent": false,
    "scopeTitle": true,
    "timeoutMillisecond": 9000
  },
  {
    "excludeScope": "",
    "group": "标题",
    "id": 1724287859220,
    "isEnabled": true,
    "isRegex": true,
    "name": "🌈转换目录序号²",
    "order": -108,
    "pattern": "(?<=^\\s{0,8}第)(?:[零一二两三四五六七八九十百千万至、]+(?=[章集])|\\d+[回卷]|0+[1-9]\\d*[章集])",
    "replacement": "@js:\n//规则版本号：0.0.1\n\nif (/[^回卷章集]$/.test(result) ) {\n\nlet sz = {'零': '0', '一': '1', '二': '2', '两': '2', '三': '3', '四': '4','五': '5', '六': '6', '七': '7', '八': '8', '九': '9', '十': '', '百': '', '千': '', '万': '', '0': '0', '1': '1', '、': ',', '至': '-'};\n\nresult=result.replace(/百零(.十)/,\"百$1\").replace(/十$/,\"十0\").replace(/百$/,\"00\").replace(/千$/,\"000\").replace(/千零(?=.$)/,\"0零\").replace(/万$/,\"0000\").replace(/万零(?=.?十)/,\"0零\").replace(/万零(?=.$)/,\"00零\").replace(/(^|[零百、至])十/g,\"$1\"+\"1\");\n\nlet r='';\nfor (let char of result) {\nr+=sz[char];\n}\n\nr=r.replace(/^0+/,'0');\n\n}\nelse if (/[章集]$/.test(result) ) {\nresult.replace(/^0+/,\"\")\n}\nelse {\n\nlet sz = {'0': '零', '1': '一', '2': '二', '3': '三', '4': '四','5': '五', '6': '六', '7': '七', '8': '八', '9': '九', '零': '零', '回': '回', '卷': '卷'},\ndw = {0: '', 1: '十', 2: '百', 3: '千', 4: '万'};\nresult=result.replace(/^0+[回卷]/,'零').replace(/^0+/,'').split('').reverse();\nlet jw=result.shift();\nlet r='';\nlet i=0;\n  for (let char of result) {\n    if (char==0) {\n      if (i!=0) r = sz[char] + r;\n    }\n    else {\n      r = sz[char]+ dw[i]+ r;\n    }\n    i++;\n  }\n\nr=r.replace(/零+/,'零').replace(/^一(?=十)|(.)零$/,'$1')+jw;\n\n}",
    "scope": "",
    "scopeContent": false,
    "scopeTitle": true,
    "timeoutMillisecond": 3000
  }
]