[{
  "enabled": true,
  "name": "必应",
  "showRule": "@js:\n//版本号:1.0.0\n\r\nlet u_a = 'Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Mobile Safari/537.36 EdgA/131.0.0.0';\r\nlet key = java.hexDecodeToString(result);\r\nlet url1 = 'https://cn.bing.com/search?q='+key,url2='',url3='';\r\nlet rr1 = '',rr2='',rr3='';\r\n\r\nfunction webajax(url){\r\n   let rr = java.ajax(url+`,{\"headers\":{\"User-Agent\":\"${u_a}\"},\"webView\":true}`);\r\n   let j = org.jsoup.Jsoup.parse(rr);\r\n   return j.select('#b_results');}\r\n\r\nrr1 = webajax(url1);\r\nurl2 = rr1.select('a[title=\"下一页\"]').attr('href');\r\nif (url2 != '') {\r\n  url2 = 'https://cn.bing.com' + url2;\r\n Packages.java.lang.Thread.sleep(400);\r\n rr2 = webajax(url2);\nrr1.addAll(rr2);\r\n url3 = rr2.select('a[title=\"下一页\"]').attr('href');\r\n}\r\nif (url3 != '') {\r\n  url3 = 'https://cn.bing.com' + url3;\r\n Packages.java.lang.Thread.sleep(400);\r\n rr3 = webajax(url3);\nrr1.addAll(rr3);\r\n}\r\n\r\nrr1.select('script,style').remove();\n\r\nrr=rr1+'';\r\n\r\nresult = rr.replace(/https:\\/\\/www.zhihu.com\\/([^\\/]+\\/\\d+)[^\\s\\<>'\"]*/g,'zhihu://$1')\r\n.replace(/https:\\/\\/zhuanlan.zhihu.com\\/p\\/(\\d+)[^\\s<>'\"]*/g,'zhihu://articles/$1')\r\n.replaceAll('https://www.zhihu.com/people/','zhihu://people/')\r\n.replace(/https:\\/\\/tieba.baidu.com\\/p\\/(\\d+)/g,'com.baidu.tieba://unidispatch/pb?tid=$1')\r\n.replace(/https:\\/\\/jump2.bdimg.com\\/f\\?kw=([%A-z\\d一-ꀀ]+)/g,'com.baidu.tieba://unidispatch/frs?kw=$1')\r\n.replaceAll('https://www.coolapk.com/','coolmarket://')\r\n.replace(/https:\\/\\/www.bilibili.com\\/bangumi\\/play\\/ep(\\d+)/g,'bilibili://pgc/season/ep/$1')\r\n.replaceAll('https://www.bilibili.com/video','bilibili://video')\r\n.replaceAll('https://space.bilibili.com/','bilibili://space/')\r\n.replaceAll('href=\"/search?q=','href=\"https://cn.bing.com/search?q=');\r\n\r\nvar aly = new JavaImporter(Packages.org.jsoup.nodes.Element,\r\nPackages.org.jsoup.Jsoup,\r\nPackages.org.jsoup.select.Elements);\r\nwith (aly) {\r\n\r\n// 解析HTML文档\r\nresult = Jsoup.parse(result);\r\nresult.select(\"#rs_root\").remove();\r\n\r\n// 查找所有的 <a> 标签\r\nlet links = result.select(\"a\");\r\nfor (link of links) {\r\n// 获取 <a> 标签内的标签\r\n let h2 = link.selectFirst(\"h2\");\r\n  if (h2 != null) {\r\n   let content = h2.text();\r\n   //移除 <h2> 标签\r\n   link.select(\"h2\").remove();\r\n   //link.removeChild(h2);另一方法，特殊情况会报错\r\n   //创建一个新的<h2> 标签\r\n   let H2 = new Element(\"h2\").appendChild(new Element(\"a\").attr(\"href\", link.attr(\"href\")).text(content));\r\n    //新<h2> 插入到原来的位置\r\n    link.replaceWith(H2);\r\n  }\r\n let h3 = link.selectFirst(\"h3\");\r\n  if (h3 != null) {\r\n   let content = h3.text();\r\n   //移除 <h3> 标签\r\n   link.select(\"h3\").remove();\r\n   //创建一个新的<h3> 标签\r\n   let H3 = new Element(\"h3\").appendChild(new Element(\"a\").attr(\"href\", link.attr(\"href\")).text(content));\r\n    //新<h3> 插入到原来的位置\r\n    link.replaceWith(H3);\r\n  }\r\n}\r\n\r\nlet imgs = result.select(\"img\");\r\nfor (img of imgs) {\r\n img.replaceWith(new Element(\"span\").text(\"🖼️\"));\r\n }\r\n\r\nresult.select(\"#b_results>li\").before(\"<br><br>\");\r\n\r\n}\r\n\r\nlet tishi = `<h2>搜索词：<a href=\"${url1}\">${key}</a></h2><br>`;\r\n\r\ntishi+result.html();",
  "sortNumber": 1,
  "urlRule": "@js:\n`data:;base64,${java.base64Encode(key)},{\"type\":\"by\"}`"
}]